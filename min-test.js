import{ProductDetailsComponent as t}from"../product-details/product-details.component";import{Component as e,ViewChild as r}from"@angular/core";import{MatPaginator as i}from"@angular/material/paginator";import{forkJoin as s}from"rxjs";import{MatTableDataSource as a}from"@angular/material/table";import{dom as o,library as n}from"@fortawesome/fontawesome-svg-core";import{faCartPlus as c,faEye as h}from"@fortawesome/free-solid-svg-icons";n.add(h,c),o.watch()@e({selector:"app-search-result",templateUrl:"./search-result.component.html",styleUrls:["./search-result.component.scss"]})
export class SearchResultComponent{displayedColumns=["Image","Product","Description","Price","Select"];pageSizeOptions=[];resultsLength=0@r(i,{static:!0})
paginator=null;breakpoint=6;emptyState=!1;constructor(t,e,r,i,s,a,o,n,c,h,u,p,l){this.deluxeGuard=t,this.dialog=e,this.productService=r,this.quantityService=i,this.basketService=s,this.translateService=a,this.router=o,this.route=n,this.sanitizer=c,this.ngZone=h,this.io=u,this.snackBarHelperService=p,this.cdRef=l}ngAfterViewInit(){let t=this.productService.search(""),e=this.quantityService.getAll();s([e,t]).subscribe(([t,e])=>{let r=[];for(let i of(this.tableData=e,this.trustProductDescription(e),e))r.push({name:i.name,price:i.price,deluxePrice:i.deluxePrice,id:i.id,image:i.image,description:i.description});for(let s of t){let o=r.find(t=>t.id===s.ProductId);void 0!==o&&(o.quantity=s.quantity)}this.dataSource=new a(r);for(let n=1;n<=Math.ceil(this.dataSource.data.length/12);n++)this.pageSizeOptions.push(12*n);this.paginator.pageSizeOptions=this.pageSizeOptions,this.dataSource.paginator=this.paginator,this.gridDataSource=this.dataSource.connect(),this.resultsLength=this.dataSource.data.length,this.filterTable(),this.routerSubscription=this.router.events.subscribe(()=>{this.filterTable()});let c=this.route.snapshot.queryParams.challenge;c&&this.route.snapshot.url.join("").match(/hacking-instructor/)&&this.startHackingInstructor(decodeURIComponent(c)),window.innerWidth<2600?(this.breakpoint=4,window.innerWidth<1740&&(this.breakpoint=3,window.innerWidth<1280&&(this.breakpoint=2,window.innerWidth<850&&(this.breakpoint=1)))):this.breakpoint=6,this.cdRef.detectChanges()},t=>console.log(t))}trustProductDescription(t){for(let e=0;e<t.length;e++)t[e].description=this.sanitizer.bypassSecurityTrustHtml(t[e].description)}ngOnDestroy(){this.routerSubscription&&this.routerSubscription.unsubscribe(),this.productSubscription&&this.productSubscription.unsubscribe(),this.dataSource&&this.dataSource.disconnect()}filterTable(){let t=this.route.snapshot.queryParams.q;t?(t=t.trim(),this.ngZone.runOutsideAngular(()=>{this.io.socket().emit("verifyLocalXssChallenge",t)}),this.dataSource.filter=t.toLowerCase(),this.searchValue=this.sanitizer.bypassSecurityTrustHtml(t),this.gridDataSource.subscribe(t=>{0===t.length?this.emptyState=!0:this.emptyState=!1})):(this.dataSource.filter="",this.searchValue=void 0,this.emptyState=!1)}startHackingInstructor(t){console.log(`Starting instructions for challenge "${t}"`),import("../../hacking-instructor").then(e=>{e.startHackingInstructorFor(t)})}showDetail(e){this.dialog.open(t,{width:"500px",height:"max-content",data:{productData:e}})}addToBasket(t){this.basketService.find(Number(sessionStorage.getItem("bid"))).subscribe(e=>{let r=e.Products,i=!1;for(let s=0;s<r.length;s++)if(r[s].id===t){i=!0,this.basketService.get(r[s].BasketItem.id).subscribe(t=>{let e=t.quantity+1;this.basketService.put(t.id,{quantity:e}).subscribe(t=>{this.productService.get(t.ProductId).subscribe(t=>{this.translateService.get("BASKET_ADD_SAME_PRODUCT",{product:t.name}).subscribe(t=>{this.snackBarHelperService.open(t,"confirmBar"),this.basketService.updateNumberOfCartItems()},t=>{this.snackBarHelperService.open(t,"confirmBar"),this.basketService.updateNumberOfCartItems()})},t=>console.log(t))},t=>{this.snackBarHelperService.open(t.error?.error,"errorBar"),console.log(t)})},t=>console.log(t));break}i||this.basketService.save({ProductId:t,BasketId:sessionStorage.getItem("bid"),quantity:1}).subscribe(t=>{this.productService.get(t.ProductId).subscribe(t=>{this.translateService.get("BASKET_ADD_PRODUCT",{product:t.name}).subscribe(t=>{this.snackBarHelperService.open(t,"confirmBar"),this.basketService.updateNumberOfCartItems()},t=>{this.snackBarHelperService.open(t,"confirmBar"),this.basketService.updateNumberOfCartItems()})},t=>console.log(t))},t=>{this.snackBarHelperService.open(t.error?.error,"errorBar"),console.log(t)})},t=>console.log(t))}isLoggedIn(){return localStorage.getItem("token")}onResize(t){t.target.innerWidth<2600?(this.breakpoint=4,t.target.innerWidth<1740&&(this.breakpoint=3,t.target.innerWidth<1280&&(this.breakpoint=2,t.target.innerWidth<850&&(this.breakpoint=1)))):this.breakpoint=6}isDeluxe(){return this.deluxeGuard.isDeluxe()}}
